## 4. Support Vector Regression (SVR)
# Purpose: Predict continuous values with a margin of tolerance.Tries to fit the best line within a margin (tolerance).

# Theory: Uses support vector machines to fit the data within a specified epsilon margin. Works well for small datasets 
and non-linear data.

# Use Case: Predicting stock prices or real estate values with tolerance.


Here's a professional and beginner-friendly **README.md** file for your **Support Vector Regression (SVR) - Salary Prediction**
project based on the instructor's explanation:

---

# üíº Support Vector Regression (SVR) ‚Äì Predicting Salaries by Position Level

## üìå Project Overview

This project applies **Support Vector Regression (SVR)** to predict an employee's salary based on their **position level**
within a company. The aim is to understand the non-linear relationship between job levels and salaries using SVR, and 
compare its performance to other regression models like Polynomial Regression.

This example helps demonstrate **feature scaling**, **non-linear modeling**, and **real-world deployment scenarios** 
in machine learning.

---

## üëî Real-World Scenario

A company is trying to determine if a candidate's previous salary (e.g., **\$160,000**) is reasonable based on their experience. 
The candidate claims to have held a **position level of 6.5** (e.g., Regional Manager). The dataset provided reflects 
the previous company's salary structure across position levels from **1 (Junior Analyst)** to **10 (CEO)**.

The goal is to use SVR to:

* **Model the relationship** between position level and salary
* **Predict the salary** for a given position level (6.5 in this case)
* **Compare performance** with other regression models

---

## üìÅ Dataset Description

The dataset is small and designed for educational purposes, consisting of:

| Column Name | Description                                 |
| ----------- | ------------------------------------------- |
| `Level`     | Position level in the company (1 to 10)     |
| `Salary`    | Corresponding salary for the position (USD) |

Each row represents a different job role, from entry-level positions to executive leadership, along with their annual salary.

### üß™ Sample Data:

| Level | Salary    |
| ----- | --------- |
| 1     | 45,000    |
| 2     | 50,000    |
| 3     | 60,000    |
| 4     | 80,000    |
| 5     | 110,000   |
| 6     | 150,000   |
| 7     | 200,000   |
| 8     | 300,000   |
| 9     | 500,000   |
| 10    | 1,000,000 |

---

## üß† Key Concepts

### ‚úÖ Support Vector Regression

SVR is a powerful algorithm that fits a **non-linear regression curve** using a margin of tolerance (epsilon)
around the actual data. Unlike linear regression, SVR doesn't assume a direct equation and benefits significantly
from **feature scaling**.

### ‚úÖ Feature Scaling

SVR is **sensitive to the range of data**, so **MinMaxScaler** or **StandardScaler** must be applied before model training.
Additionally, **inverse transformation** is used to interpret the predicted salary in the original scale.

---

## ‚öôÔ∏è Project Steps

1. **Import Libraries**
2. **Load Dataset**
3. **Apply Feature Scaling** (on both X and y)
4. **Train the SVR Model**
5. **Predict Salary for Position Level 6.5**
6. **Compare with Polynomial Regression**
7. **Visualize SVR Predictions**

   * Low-resolution plot
   * High-resolution curve

---

## üìà Visualization

* The **x-axis** represents the **position level**
* The **y-axis** represents the **salary**
* SVR draws a **smooth curve** that fits the data while respecting the margin boundaries
* We visualize both the **actual data points** and the **SVR curve**

---

## üõ†Ô∏è Technologies Used

* Python
* NumPy & Pandas
* Matplotlib & Seaborn
* Scikit-learn (`SVR`, `StandardScaler`)
* Jupyter Notebook / Google Colab

---

## üéØ Learning Outcomes

* Mastery of **Support Vector Regression (SVR)**
* Deep understanding of **feature scaling** and **inverse scaling**
* Ability to handle **non-linear relationships** in regression
* Deployment-ready skills for real-world salary prediction use cases

